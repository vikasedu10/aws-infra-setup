apiVersion: v1
kind: Secret
metadata:
  name: pgadmin-secret
  namespace: eternal
type: Opaque
data:
  pgadmin-default-password: bXlwd2Q=

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin4
  namespace: eternal
  labels:
    app: pgadmin4
spec:
  selector:
   matchLabels:
    app: pgadmin4
  replicas: 1
  template:
    metadata:
      labels:
        app: pgadmin4
    spec:
      volumes:
      - name: pgadmin4-data
        persistentVolumeClaim:
          claimName: pgadmin-pvc-claim
      containers:
      - name: pgadmin4
        image: dpage/pgadmin4
        env:
         - name: PGADMIN_DEFAULT_EMAIL
           value: "pgadmin@admin.com"
         - name: PGADMIN_DEFAULT_URL_COPY
           value: "/pgadmin4"
         - name: HOME
           value: "/pgadmin4"
         - name: PGADMIN_DEFAULT_PASSWORD
           valueFrom:
             secretKeyRef:
               name: pgadmin-secret
               key: pgadmin-default-password
         - name: PGADMIN_PORT
           value: "80"
         - name: PGADMIN_DEFAULT_URL
           value: /pgadmin4
        ports:
          - containerPort: 80
            protocol: TCP
            name: http
        resources:
          requests:
            cpu: "250m"
            memory: "250Mi"
          limits:
            cpu: "450m"
            memory: "450Mi"

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pgadmin-pv-volume
  namespace: eternal
  labels:
    type: local
    app: pgadmin4
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pgadmin-pvc-claim
  namespace: eternal
  labels:
    app: pgadmin4
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin4
  namespace: eternal
  labels:
    app: pgadmin4
spec:
  selector:
   app: pgadmin4
  #type: LoadBalancer
  ports:
   - name: http
     protocol: TCP
     port: 80
     targetPort: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pgadmin4
  namespace: eternal
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Script-Name /pgadmin4;
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: pgadmin4
                port:
                  number: 80